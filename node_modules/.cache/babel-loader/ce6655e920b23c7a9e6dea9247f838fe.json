{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid\\\\Demo\\\\src\\\\pages\\\\status\\\\status.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport Search from \"../search/search\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport Dropdown from \"../../components/dropdown/Dropdown\";\nimport SearchPatient from \"../../hooks/searchPatient\"; //import Checkbox from \"../../components/checkbox/checkbox\";\n\nimport { updatePatient, isAuthenticated } from \"../../apis\";\nimport { StatusDiv } from \"./status.styles\";\nconst options = [{\n  label: \"Severe\",\n  value: \"Severe\"\n}, {\n  label: \"Moderate\",\n  value: \"Moderate\"\n}, {\n  label: \"Mild\",\n  value: \"Mild\"\n}];\n\nconst PatientStatus = () => {\n  const [selected, setSelected] = useState(options[0]);\n  const [isChecked, setIsChecked] = React.useState(undefined);\n  const [success, setSuccess] = React.useState(false);\n  const [result, setResult] = useState({\n    patient_id: \"\",\n    patientId: \"\",\n    patientName: \"\",\n    bedNo: \"\",\n    ventilator: \"\",\n    currentStatus: \"\"\n  });\n  const {\n    patientId,\n    patientName,\n    bedNo,\n    currentStatus,\n    ventilator\n  } = result;\n  const [patient, search] = SearchPatient(\"Pt7\");\n  useEffect(result => {\n    if (patient) {\n      setResult({ ...result,\n        patientId: patient.patientCode,\n        patientName: patient.patientName,\n        currentStatus: patient.status,\n        ventilator: patient.ventilator,\n        bedNo: patient.bedNo\n      });\n      setSelected({\n        label: currentStatus,\n        value: currentStatus\n      });\n      setIsChecked(ventilator);\n    }\n  }, [patient, currentStatus, ventilator]); //setSelected({ label: currentStatus, value: currentStatus });\n  //setIsChecked(ventilator);\n\n  const [error, setError] = useState(false);\n\n  const handleChange = name => event => {\n    setResult({ ...patient,\n      [name]: event.target.value,\n      currentStatus: selected.value,\n      ventilator: isChecked\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault(); //console.log(patient, selected.value, isChecked);\n\n    const name = {\n      patientCode: patientId,\n      patientName,\n      bedNo\n    };\n    const currentStatus = selected.value;\n    const ventilator = isChecked === undefined ? \"false\" : isChecked;\n    const updatedPatient = { ...name,\n      currentStatus,\n      ventilator\n    }; //const { user, token } = isAuthenticated();\n\n    console.log(updatedPatient);\n    updatePatient(updatedPatient).then(data => {\n      if (data.error) {\n        setError(true);\n        setSuccess(false);\n      } else {\n        setError(false);\n        setSuccess(true);\n      }\n    });\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui red message\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Patient update was not successful\"))));\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    style: {\n      display: success ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Patient updated successfully\"));\n\n  return /*#__PURE__*/React.createElement(StatusDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onFormSubmit: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"status-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"patientName\",\n    value: patientName,\n    onChange: handleChange(\"patientName\"),\n    label: \"Patient Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    label: \"Current Status\",\n    options: options,\n    selected: selected,\n    onSelectedChange: setSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"bedNo\",\n    value: bedNo,\n    onChange: handleChange(\"bedNo\"),\n    label: \"Bed #\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"ventilator\",\n    isChecked: isChecked,\n    onChange: setIsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Ventilator\"), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: onSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Submit\")), successMessage(), errorMessage());\n};\n\nexport default PatientStatus;","map":{"version":3,"sources":["D:/Covid/Demo/src/pages/status/status.jsx"],"names":["React","useState","useEffect","Checkbox","FormInput","Search","CustomButton","Dropdown","SearchPatient","updatePatient","isAuthenticated","StatusDiv","options","label","value","PatientStatus","selected","setSelected","isChecked","setIsChecked","undefined","success","setSuccess","result","setResult","patient_id","patientId","patientName","bedNo","ventilator","currentStatus","patient","search","patientCode","status","error","setError","handleChange","name","event","target","onSubmit","preventDefault","updatedPatient","console","log","then","data","errorMessage","display","successMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\r\n\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport Search from \"../search/search\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\nimport SearchPatient from \"../../hooks/searchPatient\";\r\n//import Checkbox from \"../../components/checkbox/checkbox\";\r\nimport { updatePatient, isAuthenticated } from \"../../apis\";\r\n\r\nimport { StatusDiv } from \"./status.styles\";\r\n\r\nconst options = [\r\n  {\r\n    label: \"Severe\",\r\n    value: \"Severe\",\r\n  },\r\n  {\r\n    label: \"Moderate\",\r\n    value: \"Moderate\",\r\n  },\r\n  {\r\n    label: \"Mild\",\r\n    value: \"Mild\",\r\n  },\r\n];\r\n\r\nconst PatientStatus = () => {\r\n  const [selected, setSelected] = useState(options[0]);\r\n  const [isChecked, setIsChecked] = React.useState(undefined);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [result, setResult] = useState({\r\n    patient_id: \"\",\r\n    patientId: \"\",\r\n    patientName: \"\",\r\n    bedNo: \"\",\r\n    ventilator: \"\",\r\n    currentStatus: \"\",\r\n  });\r\n  const { patientId, patientName, bedNo, currentStatus, ventilator } = result;\r\n  const [patient, search] = SearchPatient(\"Pt7\");\r\n  useEffect(\r\n    (result) => {\r\n      if (patient) {\r\n        setResult({\r\n          ...result,\r\n          patientId: patient.patientCode,\r\n          patientName: patient.patientName,\r\n          currentStatus: patient.status,\r\n          ventilator: patient.ventilator,\r\n          bedNo: patient.bedNo,\r\n        });\r\n        setSelected({ label: currentStatus, value: currentStatus });\r\n        setIsChecked(ventilator);\r\n      }\r\n    },\r\n    [patient, currentStatus, ventilator]\r\n  );\r\n\r\n  //setSelected({ label: currentStatus, value: currentStatus });\r\n  //setIsChecked(ventilator);\r\n\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setResult({\r\n      ...patient,\r\n      [name]: event.target.value,\r\n      currentStatus: selected.value,\r\n      ventilator: isChecked,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //console.log(patient, selected.value, isChecked);\r\n    const name = { patientCode:patientId, patientName, bedNo };\r\n    const currentStatus = selected.value;\r\n    const ventilator = isChecked === undefined ? \"false\" : isChecked;\r\n    const updatedPatient = { ...name, currentStatus, ventilator };\r\n    //const { user, token } = isAuthenticated();\r\n    console.log(updatedPatient);\r\n    updatePatient(updatedPatient).then((data) => {\r\n      if (data.error) {\r\n        setError(true);\r\n        setSuccess(false)\r\n      } else {\r\n        setError(false);\r\n        setSuccess(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"column\" style={{ display: error ? \"\" : \"none\" }}>\r\n        <div className=\"ui segment\">\r\n          <div\r\n            className=\"ui red message\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            <h4>Patient update was not successful</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div className=\"ui segment\" style={{ display: success ? \"\" : \"none\" }}>\r\n      <h4>Patient updated successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <StatusDiv>\r\n      <Search onFormSubmit={search} />\r\n      <form className=\"status-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"patientName\"\r\n          value={patientName}\r\n          onChange={handleChange(\"patientName\")}\r\n          label=\"Patient Name\"\r\n          required\r\n        />\r\n        <Dropdown\r\n          label=\"Current Status\"\r\n          options={options}\r\n          selected={selected}\r\n          onSelectedChange={setSelected}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"bedNo\"\r\n          value={bedNo}\r\n          onChange={handleChange(\"bedNo\")}\r\n          label=\"Bed #\"\r\n          required\r\n        />\r\n        {/*<Checkbox\r\n          type=\"text\"\r\n          label=\"Ventilator\"\r\n          isSelected=\"\"\r\n          onCheckboxChange=\"\"\r\n          required\r\n        />*/}\r\n        <Checkbox\r\n          name=\"ventilator\"\r\n          isChecked={isChecked}\r\n          onChange={setIsChecked}\r\n        >\r\n          Ventilator\r\n        </Checkbox>\r\n        <CustomButton onClick={onSubmit} type=\"submit\">\r\n          Submit\r\n        </CustomButton>\r\n      </form>\r\n      {successMessage()}\r\n      {errorMessage()}\r\n    </StatusDiv>\r\n  );\r\n};\r\n\r\nexport default PatientStatus;\r\n"]},"metadata":{},"sourceType":"module"}