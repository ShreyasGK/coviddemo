{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid\\\\Demo\\\\src\\\\pages\\\\entry\\\\entry.jsx\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../../components/form-input/form-input.component\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport Dropdown from \"../../components/dropdown/Dropdown\"; //import Checkbox from \"../../components/checkbox/checkbox\";\n\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\nimport { createPatient, isAuthenticated } from \"../../apis\";\nimport { EntryDiv } from \"./entry.styles\";\nconst options = [{\n  label: \"Severe\",\n  value: \"Severe\"\n}, {\n  label: \"Moderate\",\n  value: \"Moderate\"\n}, {\n  label: \"Mild\",\n  value: \"Mild\"\n}];\n\nconst Entry = () => {\n  const [selected, setSelected] = useState(options[0]);\n  const [isChecked, setIsChecked] = React.useState(undefined);\n  const [success, setSuccess] = React.useState(false);\n  const [values, setValues] = useState({\n    patientCode: \"\",\n    patientName: \"\",\n    bedNo: \"\",\n    address: \"\",\n    hospital: \"KIMS Hospital\"\n  });\n  const [error, setError] = useState(false);\n  const {\n    patientCode,\n    patientName,\n    bedNo,\n    hospital,\n    address\n  } = values;\n\n  const handleChange = name => event => {\n    setValues({ ...values,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmit = event => {\n    event.preventDefault(); //console.log(values, selected.value, isChecked);\n\n    const name = {\n      patientCode,\n      patientName,\n      bedNo,\n      hospital,\n      address\n    };\n    const currentStatus = selected.value;\n    const ventilator = isChecked === undefined ? \"false\" : isChecked;\n    const patient = { ...name,\n      currentStatus,\n      ventilator\n    }; //const { user, token } = isAuthenticated();\n\n    console.log(patient);\n    createPatient(patient).then(data => {\n      if (data.err) {\n        setError(true);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n      }\n    });\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui red message\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, error)));\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    style: {\n      display: success ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Patient created successfully\"));\n\n  return /*#__PURE__*/React.createElement(EntryDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"entry-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"patientCode\",\n    value: patientCode,\n    onChange: handleChange(\"patientCode\"),\n    label: \"Patient ID\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"patientName\",\n    value: patientName,\n    onChange: handleChange(\"patientName\"),\n    label: \"Patient Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"address\",\n    value: address,\n    onChange: handleChange(\"address\"),\n    label: \"address\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"hospital\",\n    value: hospital,\n    onChange: handleChange(\"hospital\"),\n    label: \"hospital\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    label: \"Current Status\",\n    name: \"currentStatus\",\n    options: options,\n    selected: selected,\n    onSelectedChange: setSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"bedNo\",\n    value: bedNo,\n    onChange: handleChange(\"bedNo\"),\n    label: \"Bed #\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"ventilator\",\n    isChecked: isChecked,\n    onChange: setIsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"Ventilator\"), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: onSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, \"Submit\")), successMessage(), errorMessage());\n};\n\nexport default Entry;","map":{"version":3,"sources":["D:/Covid/Demo/src/pages/entry/entry.jsx"],"names":["React","useState","FormInput","CustomButton","Dropdown","Checkbox","createPatient","isAuthenticated","EntryDiv","options","label","value","Entry","selected","setSelected","isChecked","setIsChecked","undefined","success","setSuccess","values","setValues","patientCode","patientName","bedNo","address","hospital","error","setError","handleChange","name","event","target","onSubmit","preventDefault","currentStatus","ventilator","patient","console","log","then","data","err","errorMessage","display","successMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../../components/form-input/form-input.component\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport Dropdown from \"../../components/dropdown/Dropdown\";\r\n//import Checkbox from \"../../components/checkbox/checkbox\";\r\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\r\nimport { createPatient, isAuthenticated } from \"../../apis\";\r\n\r\nimport { EntryDiv } from \"./entry.styles\";\r\n\r\nconst options = [\r\n  {\r\n    label: \"Severe\",\r\n    value: \"Severe\",\r\n  },\r\n  {\r\n    label: \"Moderate\",\r\n    value: \"Moderate\",\r\n  },\r\n  {\r\n    label: \"Mild\",\r\n    value: \"Mild\",\r\n  },\r\n];\r\n\r\nconst Entry = () => {\r\n  const [selected, setSelected] = useState(options[0]);\r\n  const [isChecked, setIsChecked] = React.useState(undefined);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [values, setValues] = useState({\r\n    patientCode: \"\",\r\n    patientName: \"\",\r\n    bedNo: \"\",\r\n    address:\"\",\r\n    hospital : \"KIMS Hospital\"\r\n  });\r\n  const [error, setError] = useState(false);\r\n  const { patientCode, patientName, bedNo, hospital, address } = values;\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //console.log(values, selected.value, isChecked);\r\n    const name = { patientCode, patientName, bedNo,hospital, address };\r\n    const currentStatus = selected.value;\r\n    const ventilator = isChecked === undefined ? \"false\" : isChecked;\r\n    const patient = { ...name, currentStatus, ventilator };\r\n    //const { user, token } = isAuthenticated();\r\n    console.log(patient);\r\n    createPatient(patient).then((data) => {\r\n      if (data.err) {\r\n        setError(true);\r\n      } else {\r\n        setError(\"\");\r\n        setSuccess(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"column\" style={{ display: error ? \"\" : \"none\" }}>\r\n        <div className=\"ui segment\">\r\n          <div\r\n            className=\"ui red message\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div className=\"ui segment\" style={{ display: success ? \"\" : \"none\" }}>\r\n      <h4>Patient created successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <EntryDiv>\r\n      <form className=\"entry-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"patientCode\"\r\n          value={patientCode}\r\n          onChange={handleChange(\"patientCode\")}\r\n          label=\"Patient ID\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"patientName\"\r\n          value={patientName}\r\n          onChange={handleChange(\"patientName\")}\r\n          label=\"Patient Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"address\"\r\n          value={address}\r\n          onChange={handleChange(\"address\")}\r\n          label=\"address\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"hospital\"\r\n          value={hospital}\r\n          onChange={handleChange(\"hospital\")}\r\n          label=\"hospital\"\r\n          required\r\n        />\r\n        <Dropdown\r\n          label=\"Current Status\"\r\n          name=\"currentStatus\"\r\n          options={options}\r\n          selected={selected}\r\n          onSelectedChange={setSelected}\r\n        />\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"bedNo\"\r\n          value={bedNo}\r\n          onChange={handleChange(\"bedNo\")}\r\n          label=\"Bed #\"\r\n          required\r\n        />\r\n        {/*<Checkbox\r\n          name=\"ventilator\"\r\n          label=\"Ventilator\"\r\n          checked={isSelected}\r\n          onChange={onCheckboxChange}\r\n          required\r\n        />*/}\r\n        <Checkbox\r\n          name=\"ventilator\"\r\n          isChecked={isChecked}\r\n          onChange={setIsChecked}\r\n        >\r\n          Ventilator\r\n        </Checkbox>\r\n        <CustomButton onClick={onSubmit} type=\"submit\">\r\n          Submit\r\n        </CustomButton>\r\n      </form>\r\n      {successMessage()}\r\n      {errorMessage()}\r\n    </EntryDiv>\r\n  );\r\n};\r\n\r\nexport default Entry;\r\n"]},"metadata":{},"sourceType":"module"}