{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid\\\\Demo\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from \"react\"; //import { connect } from \"react-redux\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\"; //import { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport { signup } from \"../../apis\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"deepak\",\n    email: \"deepualevoor@gmail.com\",\n    password: \"saregama123\",\n    confirmPassword: \"saregama123\",\n    error: \"\",\n    success: false\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword,\n    error,\n    success\n  } = userCredentials; // const [values, setValues] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   password: \"\",\n  //   error: \"\",\n  //   success: false,\n  // });\n  //const { name, email, password, error, success } = values;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    } //signUpStart({ displayName, email, password });\n\n\n    signup({\n      displayName,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        setUserCredentials({ ...userCredentials,\n          error: data.error,\n          success: false\n        });\n      } else {\n        setUserCredentials({ ...userCredentials,\n          displayName: \"\",\n          email: \"\",\n          password: \"\",\n          confirmPassword: \"\",\n          error: \"\",\n          success: true\n        });\n      }\n    });\n  };\n\n  const handleChange = name => event => {\n    //const { displayName, value } = event.target;\n    setUserCredentials({ ...userCredentials,\n      error: false,\n      [name]: event.target.value\n    }); //setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui red message\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, error)));\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    style: {\n      display: success ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"User created successfully\"));\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange(\"displayName\"),\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange(\"email\"),\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange(\"password\"),\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange(\"confirmPassword\"),\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")), errorMessage(), successMessage());\n}; // const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n// });\n// export default connect(null, mapDispatchToProps)(SignUp);\n\n\nexport default SignUp;","map":{"version":3,"sources":["D:/Covid/Demo/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignUpContainer","SignUpTitle","signup","SignUp","signUpStart","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","error","success","handleSubmit","event","preventDefault","alert","then","data","handleChange","name","target","value","errorMessage","display","successMessage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n//import { connect } from \"react-redux\";\r\n\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\n//import { signUpStart } from \"../../redux/user/user.actions\";\r\n\r\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\r\nimport { signup } from \"../../apis\";\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    displayName: \"deepak\",\r\n    email: \"deepualevoor@gmail.com\",\r\n    password: \"saregama123\",\r\n    confirmPassword: \"saregama123\",\r\n    error: \"\",\r\n    success: false,\r\n  });\r\n\r\n  const {\r\n    displayName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    error,\r\n    success,\r\n  } = userCredentials;\r\n\r\n  // const [values, setValues] = useState({\r\n  //   name: \"\",\r\n  //   email: \"\",\r\n  //   password: \"\",\r\n  //   error: \"\",\r\n  //   success: false,\r\n  // });\r\n\r\n  //const { name, email, password, error, success } = values;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    //signUpStart({ displayName, email, password });\r\n    signup({ displayName, email, password }).then((data) => {\r\n      if (data.error) {\r\n        setUserCredentials({\r\n          ...userCredentials,\r\n          error: data.error,\r\n          success: false,\r\n        });\r\n      } else {\r\n        setUserCredentials({\r\n          ...userCredentials,\r\n          displayName: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChange = (name) => (event) => {\r\n    //const { displayName, value } = event.target;\r\n    setUserCredentials({\r\n      ...userCredentials,\r\n      error: false,\r\n      [name]: event.target.value,\r\n    });\r\n\r\n    //setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"column\" style={{ display: error ? \"\" : \"none\" }}>\r\n        <div className=\"ui segment\">\r\n          <div\r\n            className=\"ui red message\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div className=\"ui segment\" style={{ display: success ? \"\" : \"none\" }}>\r\n      <h4>User created successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <SignUpContainer>\r\n      <SignUpTitle>I do not have a account</SignUpTitle>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={displayName}\r\n          onChange={handleChange(\"displayName\")}\r\n          label=\"Display Name\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange(\"email\")}\r\n          label=\"Email\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange(\"password\")}\r\n          label=\"Password\"\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          onChange={handleChange(\"confirmPassword\")}\r\n          label=\"Confirm Password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n      {errorMessage()}\r\n      {successMessage()}\r\n    </SignUpContainer>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(SignUp);\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}