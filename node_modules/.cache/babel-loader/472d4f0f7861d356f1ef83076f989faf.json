{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid\\\\covid\\\\client\\\\src\\\\pages\\\\exit\\\\exit.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\nimport Search from \"../search/search\";\nimport SearchPatient from \"../../hooks/searchPatient\";\nimport { ExitDiv } from \"./exit.styles\";\nimport { dischargePatient, isAuthenticated } from \"../../apis\";\n\nconst Exit = () => {\n  const [isChecked, setIsChecked] = React.useState(undefined);\n  const [success, setSuccess] = React.useState(false);\n  const [result, setResult] = useState({\n    patient_id: \"\",\n    patientId: \"\",\n    patientName: \"\",\n    bedNo: \"\",\n    currentStatus: \"\"\n  });\n  const {\n    patientId,\n    patientName,\n    bedNo,\n    currentStatus\n  } = result;\n  const [patient, search] = SearchPatient(\"1055\");\n  useEffect(result => {\n    if (patient) {\n      setResult({ ...result,\n        patient_id: patient._id,\n        patientId: patient.patientId,\n        patientName: patient.patientName,\n        currentStatus: patient.currentStatus,\n        bedNo: patient.bedNo\n      });\n    }\n  }, [patient]);\n  const [error, setError] = useState(false);\n\n  const onSubmit = event => {\n    event.preventDefault(); //console.log(patient, selected.value, isChecked);\n    //const name = { patientName, bedNo };\n    //const currentStatus = selected.value;\n\n    const discharged = isChecked === undefined ? \"false\" : isChecked;\n    const updatedPatient = {\n      discharged\n    };\n    const {\n      user,\n      token\n    } = isAuthenticated();\n    console.log(updatedPatient);\n    dischargePatient(user._id, token, patientId, updatedPatient).then(data => {\n      if (data.error) {\n        setError(true);\n      } else {\n        setError(\"\");\n        setSuccess(true);\n      }\n    });\n  };\n\n  const errorMessage = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui red message\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, error)));\n  };\n\n  const successMessage = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui segment\",\n    style: {\n      display: success ? \"\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Patient discharged successfully\"));\n\n  return /*#__PURE__*/React.createElement(ExitDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onFormSubmit: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), \"Patient Name: \", patientName, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), \"Current Status : \", currentStatus, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), \"Bed No : \", bedNo, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"entry-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"Discharge Formality\",\n    isChecked: isChecked,\n    onChange: setIsChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Discharge Formality\"), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: onSubmit,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Submit\")), successMessage(), errorMessage());\n};\n\nexport default Exit;","map":{"version":3,"sources":["D:/Covid/covid/client/src/pages/exit/exit.jsx"],"names":["React","useState","useEffect","Checkbox","CustomButton","Search","SearchPatient","ExitDiv","dischargePatient","isAuthenticated","Exit","isChecked","setIsChecked","undefined","success","setSuccess","result","setResult","patient_id","patientId","patientName","bedNo","currentStatus","patient","search","_id","error","setError","onSubmit","event","preventDefault","discharged","updatedPatient","user","token","console","log","then","data","errorMessage","display","successMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Checkbox } from \"@thumbtack/thumbprint-react\";\r\n\r\nimport CustomButton from \"../../components/custom-button/custom-button.component\";\r\nimport Search from \"../search/search\";\r\nimport SearchPatient from \"../../hooks/searchPatient\";\r\nimport { ExitDiv } from \"./exit.styles\";\r\nimport { dischargePatient, isAuthenticated } from \"../../apis\";\r\n\r\nconst Exit = () => {\r\n  const [isChecked, setIsChecked] = React.useState(undefined);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [result, setResult] = useState({\r\n    patient_id: \"\",\r\n    patientId: \"\",\r\n    patientName: \"\",\r\n    bedNo: \"\",\r\n    currentStatus: \"\",\r\n  });\r\n  const { patientId, patientName, bedNo, currentStatus } = result;\r\n  const [patient, search] = SearchPatient(\"1055\");\r\n  useEffect(\r\n    (result) => {\r\n      if (patient) {\r\n        setResult({\r\n          ...result,\r\n          patient_id: patient._id,\r\n          patientId: patient.patientId,\r\n          patientName: patient.patientName,\r\n          currentStatus: patient.currentStatus,\r\n          bedNo: patient.bedNo,\r\n        });\r\n      }\r\n    },\r\n    [patient]\r\n  );\r\n  const [error, setError] = useState(false);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    //console.log(patient, selected.value, isChecked);\r\n    //const name = { patientName, bedNo };\r\n    //const currentStatus = selected.value;\r\n    const discharged = isChecked === undefined ? \"false\" : isChecked;\r\n    const updatedPatient = { discharged };\r\n    const { user, token } = isAuthenticated();\r\n    console.log(updatedPatient);\r\n    dischargePatient(user._id, token, patientId, updatedPatient).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          setError(true);\r\n        } else {\r\n          setError(\"\");\r\n          setSuccess(true);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n      <div className=\"column\" style={{ display: error ? \"\" : \"none\" }}>\r\n        <div className=\"ui segment\">\r\n          <div\r\n            className=\"ui red message\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n          >\r\n            {error}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const successMessage = () => (\r\n    <div className=\"ui segment\" style={{ display: success ? \"\" : \"none\" }}>\r\n      <h4>Patient discharged successfully</h4>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ExitDiv>\r\n      <Search onFormSubmit={search} />\r\n      {/*<Checkbox\r\n          type=\"text\"\r\n          label=\"Discharge formality\"\r\n          isSelected=\"\"\r\n          onCheckboxChange=\"\"\r\n          required\r\n        />*/}\r\n      <br></br>\r\n      Patient Name: {patientName}\r\n      <br></br>\r\n      Current Status : {currentStatus}\r\n      <br></br>\r\n      Bed No : {bedNo}\r\n      <br></br>\r\n      <form className=\"entry-form\">\r\n        <Checkbox\r\n          name=\"Discharge Formality\"\r\n          isChecked={isChecked}\r\n          onChange={setIsChecked}\r\n        >\r\n          Discharge Formality\r\n        </Checkbox>\r\n        <CustomButton onClick={onSubmit} type=\"submit\">\r\n          Submit\r\n        </CustomButton>\r\n      </form>\r\n      {successMessage()}\r\n      {errorMessage()}\r\n    </ExitDiv>\r\n  );\r\n};\r\n\r\nexport default Exit;\r\n"]},"metadata":{},"sourceType":"module"}