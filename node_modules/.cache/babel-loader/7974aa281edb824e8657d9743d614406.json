{"ast":null,"code":"var _jsxFileName = \"D:\\\\Covid\\\\covid\\\\client\\\\src\\\\pages\\\\homepage\\\\homepage.component.jsx\";\nimport React, { useState, useEffect } from \"react\"; // import {\n//   getPatientCountBySeverity,\n//   getPatientCountByVentilator,\n// } from \"../../apis\";\n\nimport { API } from \"../../backend\";\nimport { HomePageContainer, Circle } from \"./homepage.styles\";\n\nconst HomePage = () => {\n  const totalBeds = 150;\n  const totalVentilators = 50;\n  const [result, setResult] = useState([]);\n  const [count, setCount] = useState(0);\n  const [ventilatorCount, setVentilatorCount] = useState(0); //   const [severityResult, setSeverityResult] = useState({\n  //     currentStatus: \"\",\n  //     patientCount: \"\",\n  //   });\n  //const { currentStatus, patientCount } = severityResult;\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n    fetch(`${API}/ptcountseverity`, {\n      signal: signal,\n      method: \"GET\"\n    }).then(results => results.json()).then(data => {\n      //console.log(data);\n      setResult(data);\n    });\n    fetch(`${API}/ptcount`, {\n      signal: signal,\n      method: \"GET\"\n    }).then(results => results.json()).then(data => {\n      //console.log(data);\n      setCount(data[0].ptCount);\n    });\n    fetch(`${API}/ptcountventilator`, {\n      signal: signal,\n      method: \"GET\"\n    }).then(results => results.json()).then(data => {\n      //console.log(data);\n      setVentilatorCount(data[0].ptCount);\n    });\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  const cards = () => {\n    return result.map(item =>\n    /*#__PURE__*/\n    //  color = \"#ff0000\",\n    //  if (item._id == \"Severe\") {\n    //   color = \"#ff0000\";\n    //  }\n    React.createElement(Circle, {\n      key: item._id,\n      style: {\n        backgroundColor: item._id === \"Severe\" ? \"#ff0000\" : item._id === \"Mild\" ? \"#FFFF00\" : \"#FF8C00\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"auto\",\n        padding: \"70px 30px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, item._id), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, item.ptCount))));\n  };\n\n  return /*#__PURE__*/React.createElement(HomePageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Beds\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: \"10px 40px\",\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      margin: \"30px\",\n      gap: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, cards(), /*#__PURE__*/React.createElement(Circle, {\n    style: {\n      backgroundColor: \"#008000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\",\n      padding: \"70px 30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Free\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, totalBeds - count)))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Ventilators\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: \"10px 40px\",\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      margin: \"30px\",\n      gap: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Circle, {\n    style: {\n      backgroundColor: \"#FF8C00\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\",\n      padding: \"70px 30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Used\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, ventilatorCount))), /*#__PURE__*/React.createElement(Circle, {\n    style: {\n      backgroundColor: \"#008000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\",\n      padding: \"70px 30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Used\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, totalVentilators - ventilatorCount)))));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["D:/Covid/covid/client/src/pages/homepage/homepage.component.jsx"],"names":["React","useState","useEffect","API","HomePageContainer","Circle","HomePage","totalBeds","totalVentilators","result","setResult","count","setCount","ventilatorCount","setVentilatorCount","abortController","AbortController","signal","fetch","method","then","results","json","data","ptCount","cleanup","abort","cards","map","item","_id","backgroundColor","textAlign","margin","padding","display","flexDirection","justifyContent","flexWrap","gap"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   getPatientCountBySeverity,\r\n//   getPatientCountByVentilator,\r\n// } from \"../../apis\";\r\nimport { API } from \"../../backend\";\r\nimport { HomePageContainer, Circle } from \"./homepage.styles\";\r\n\r\nconst HomePage = () => {\r\n  const totalBeds = 150;\r\n  const totalVentilators = 50;\r\n  const [result, setResult] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [ventilatorCount, setVentilatorCount] = useState(0);\r\n  //   const [severityResult, setSeverityResult] = useState({\r\n  //     currentStatus: \"\",\r\n  //     patientCount: \"\",\r\n  //   });\r\n  //const { currentStatus, patientCount } = severityResult;\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    fetch(`${API}/ptcountseverity`, { signal: signal, method: \"GET\" })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setResult(data);\r\n      });\r\n\r\n    fetch(`${API}/ptcount`, { signal: signal, method: \"GET\" })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setCount(data[0].ptCount);\r\n      });\r\n\r\n    fetch(`${API}/ptcountventilator`, { signal: signal, method: \"GET\" })\r\n      .then((results) => results.json())\r\n      .then((data) => {\r\n        //console.log(data);\r\n        setVentilatorCount(data[0].ptCount);\r\n      });\r\n\r\n    return function cleanup() {\r\n      abortController.abort();\r\n    };\r\n  }, []);\r\n\r\n  const cards = () => {\r\n    return result.map((item) => (\r\n      //  color = \"#ff0000\",\r\n      //  if (item._id == \"Severe\") {\r\n      //   color = \"#ff0000\";\r\n      //  }\r\n\r\n      <Circle\r\n        key={item._id}\r\n        style={{\r\n          backgroundColor:\r\n            item._id === \"Severe\"\r\n              ? \"#ff0000\"\r\n              : item._id === \"Mild\"\r\n              ? \"#FFFF00\"\r\n              : \"#FF8C00\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"auto\",\r\n            padding: \"70px 30px\",\r\n          }}\r\n        >\r\n          <h4>{item._id}</h4>\r\n          <p>{item.ptCount}</p>\r\n        </div>\r\n      </Circle>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <HomePageContainer>\r\n      <h1>Beds</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          padding: \"10px 40px\",\r\n          justifyContent: \"space-between\",\r\n          flexWrap: \"wrap\",\r\n          margin: \"30px\",\r\n          gap: \"20px\",\r\n        }}\r\n      >\r\n        {cards()}\r\n\r\n        <Circle style={{ backgroundColor: \"#008000\" }}>\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"auto\",\r\n              padding: \"70px 30px\",\r\n            }}\r\n          >\r\n            <h4>Free</h4>\r\n            <p>{totalBeds - count}</p>\r\n          </div>\r\n        </Circle>\r\n      </div>\r\n      <h1>Ventilators</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          padding: \"10px 40px\",\r\n          justifyContent: \"space-between\",\r\n          flexWrap: \"wrap\",\r\n          margin: \"30px\",\r\n          gap: \"20px\",\r\n        }}\r\n      >\r\n        <Circle\r\n          style={{\r\n            backgroundColor: \"#FF8C00\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"auto\",\r\n              padding: \"70px 30px\",\r\n            }}\r\n          >\r\n            <h4>Used</h4>\r\n            <p>{ventilatorCount}</p>\r\n          </div>\r\n        </Circle>\r\n        <Circle\r\n          style={{\r\n            backgroundColor: \"#008000\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"auto\",\r\n              padding: \"70px 30px\",\r\n            }}\r\n          >\r\n            <h4>Used</h4>\r\n            <p>{totalVentilators - ventilatorCount}</p>\r\n          </div>\r\n        </Circle>\r\n      </div>\r\n      {/*<div>\r\n        <h4>Used</h4>\r\n        <h6>{ventilatorCount}</h6>\r\n      </div>\r\n      <div>\r\n        <h4>Free</h4>\r\n        <h6>{totalVentilators - ventilatorCount}</h6>\r\n      </div>*/}\r\n    </HomePageContainer>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}